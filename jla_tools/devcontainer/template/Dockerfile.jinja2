# FROM mcr.microsoft.com/devcontainers/base:jammy
FROM ubuntu:22.04

RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y --no-install-recommends \
    bash-completion \
    # gdb \
    # valgrind \
    # jsonnet \
    # ssh \
    python3 \ 
    python3-pip \
    # flake8 \
    # pyyaml==5.3.1 \
    # snooty-lextudio \
    # esbonio \
    sudo \
    # bandit && \
    docker.io \
    git \
    && rm -rf /root/.cache/pip/*. \
    && rm -rf /var/lib/apt/lists/*


# Set user
# MIR users does not follow the convention of using same uid and gid for users due to single-sign-on
# Therefore this hack to create the group first
RUN addgroup --quiet --gid {{local_group_id}} dev_user_group 

# uid and gid mathing host user. Run 'id' in host terminal
RUN adduser --quiet --uid {{local_user_id}} --ingroup dev_user_group --gecos "User lalaala" --shell /bin/zsh --disabled-password dev
RUN usermod --append  --groups sudo dev
RUN echo 'dev:Docker!' | chpasswd
RUN echo 'root:Docker!' | chpasswd
WORKDIR /home/dev

# Intermidiate workaround to acces docker in docker
# Propper solution is to map user id and user group 
# to the same as host either using build_args, runtime or jinja docker files
RUN addgroup --quiet --gid 999 dockerdev 
RUN usermod --append  --groups dockerdev dev

# Install bazel
COPY .devcontainer/assets/bazel-complete /etc/bash_completion.d/bazel
COPY .devcontainer/assets/bazel /usr/bin/bazel
COPY .devcontainer/scripts/install_bazel.bash /scripts/install_bazel.bash
RUN /scripts/install_bazel.bash

# Intsall ROS2
COPY .devcontainer/scripts/install_ros2.bash /scripts/install_ros2.bash
RUN /scripts/install_ros2.bash

# Install zsh
COPY .devcontainer/scripts/install_zsh.bash /scripts/install_zsh.bash
RUN /scripts/install_zsh.bash

# Install jla tools
COPY jla_tools/requirements.txt .
RUN python3 -m pip install --ignore-installed -r requirements.txt
RUN echo "/workspaces/workspaces/jla_tools/env.sh" >> .bashrc



# Set user and other stuff
USER dev
CMD [ "zsh" ]



# # Automatically source jla tools
# RUN echo ' \n\
#     jla_tools="/workspaces/workspaces/jla_tools/env.sh" \n\
#     if [ -f $jla_tools ]; then \n\
#     source $jla_tools \n\
#     else \n\
#     echo "Failed to source $jla_tools" \n\
#     fi \n\
#     ' >> .bashrc

# Add the devcontainer config
# RUN echo 'export PATH=/home/dev/go/bin:$PATH:/usr/local/go/bin' >> "/home/dev/.bashrc"

