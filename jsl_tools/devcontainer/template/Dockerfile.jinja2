# FROM mcr.microsoft.com/devcontainers/base:jammy
# FROM ubuntu:22.04
FROM {{base_image}}

RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y --no-install-recommends \
    # gdb \
    # valgrind \
    # ssh \
    # flake8 \
    # pyyaml==5.3.1 \
    # bandit is a pyton security linter
    # bandit && \
    bash-completion \
    python3 \ 
    python3-pip \
    sudo \
    docker.io \
    git \
    # lsb-core for getting the ubuntu-version in scripts
    lsb-core \
    && rm -rf /root/.cache/pip/*. \
    && rm -rf /var/lib/apt/lists/*


# Set user
# MIR users does not follow the convention of using same uid and gid for users due to single-sign-on
# Therefore this hack to create the group first
RUN addgroup --quiet --gid {{local_group_id}} dev_user_group 

# uid and gid mathing host user. Run 'id' in host terminal
RUN adduser --quiet --uid {{local_user_id}} --ingroup dev_user_group --gecos "User lalaala" --shell /bin/zsh --disabled-password dev
RUN usermod --append  --groups sudo dev
RUN echo 'dev:Docker!' | chpasswd
RUN echo 'root:Docker!' | chpasswd
WORKDIR /home/dev

# Intermidiate workaround to acces docker in docker
# Propper solution is to map user id and user group 
# to the same as host either using build_args, runtime or jinja docker files
RUN addgroup --quiet --gid 999 dockerdev 
RUN usermod --append  --groups dockerdev dev


# Install bazel
COPY .devcontainer/assets/bazel-complete /etc/bash_completion.d/bazel
COPY .devcontainer/assets/bazel /usr/bin/bazel
COPY .devcontainer/scripts/install_bazel.sh /scripts/install_bazel.sh
RUN /scripts/install_bazel.sh


# Intsall ROS2
{% if install_ros2 %}
COPY .devcontainer/scripts/install_ros2.sh /scripts/install_ros2.sh
RUN /scripts/install_ros2.sh
{% else %}
# -- ROS2 not specified to be installed
{% endif %}


# Install ROS1
{% if install_ros1 %}
COPY .devcontainer/scripts/install_ros1_noetic.sh /scripts/install_ros1_noetic.sh
RUN /scripts/install_ros1_noetic.sh
{% else %}
# -- ROS1 not specified to be installed
{% endif %}


# Install zsh
COPY .devcontainer/scripts/install_zsh.sh /scripts/install_zsh.sh
RUN /scripts/install_zsh.sh


# Install jsl tools
COPY .devcontainer/assets/jsl_tools.tar .
RUN tar xvf jsl_tools.tar
RUN python3 -m pip install --ignore-installed -r jsl_tools/requirements.txt
RUN echo "source jsl_tools/env.sh" >> .bashrc
#RUN echo "/workspaces/workspaces/jsl_tools/env.sh" >> .bashrc


# Set user and other stuff
USER dev
CMD [ "zsh" ]

